// pages/weather.js
import Head from 'next/head';
import Image from 'next/image';
import axios from 'axios';
import { useState } from 'react';
import { useRouter } from 'next/router';
import { BsSearch } from 'react-icons/bs';
import Spinner from '../components/Spinner';

export default function Weather() {
  const [city, setCity] = useState('');
  const [weather, setWeather] = useState({});
  const [loading, setLoading] = useState(false);
  const router = useRouter();

  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`;

  const fetchWeather = async (e) => {
    e.preventDefault();
    setLoading(true);

    try {
      const response = await axios.get(url);
      const data = response.data;
      setWeather(data);
    } catch (error) {
      console.error('Error fetching the weather data', error);
    } finally {
      setLoading(false);
      setCity('');
    }
  };

  const getBackgroundImage = () => {
    if (!weather.weather) return '/assets/sunset.jpg';

    const condition = weather.weather[0].main.toLowerCase();
    const conditionToImage = {
      clear: '/assets/clear.jpg',
      clouds: '/assets/clouds.jpg',
      rain: '/assets/rain.jpg',
      snow: '/assets/snow.jpg',
      thunderstorm: '/assets/thunderstorms.avif',
      drizzle: '/assets/drizzle.jpg',
      mist: '/assets/mist1.jpg',
    };

    return conditionToImage[condition] || '/assets/default.jpg';
  };



  if (loading) {
    return <Spinner />;
  } else {
    return (
      <div>
        <Head>
          <title>Weather - Next App</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>
        {/* Overlay */}
        <div className='absolute top-0 left-0 right-0 bottom-0 bg-black/40 z-[1]' />
        {/* Background image */}
        <Image
          src={getBackgroundImage()}
          layout='fill'
          className='object-cover'
        />

        {/* Search */}
        <div className='relative flex justify-between items-center max-w-[500px] w-full m-auto pt-4 px-4 text-white z-10'>
          <form
            onSubmit={fetchWeather}
            className='flex justify-between items-center w-full m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl'
          >
            <div>
              <input
                onChange={(e) => setCity(e.target.value)}
                className='bg-transparent border-none text-white focus:outline-none text-2xl'
                type='text'
                placeholder='Search city'
              />
            </div>
            <button type='submit'>
              <BsSearch size={20} />
            </button>
          </form>
        </div>

        {/* Weather */}
        {weather.main && (
          <div className='relative max-w-[500px] w-full bg-white/70 p-4 rounded-lg mt-4 mx-auto text-black z-10'>
            <div className='flex justify-between items-center'>
              <div>
                <h1 className='text-3xl font-bold'>{weather.name}</h1>
                <p className='text-xl'>{weather.weather[0].description}</p>
                <p className='text-5xl font-bold'>{weather.main.temp}°F</p>
              </div>
              <div>
                <Image
                  src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}
                  alt={weather.weather[0].description}
                  width={100}
                  height={100}
                />
              </div>
            </div>
            <div className='grid grid-cols-2 gap-4 mt-4'>
              <div className='flex flex-col items-center'>
                <p className='text-xl font-bold'>{weather.main.humidity}%</p>
                <p>Humidity</p>
              </div>
              <div className='flex flex-col items-center'>
                <p className='text-xl font-bold'>{weather.wind.speed} mph</p>
                <p>Wind Speed</p>
              </div>
              <div className='flex flex-col items-center'>
                <p className='text-xl font-bold'>{weather.main.feels_like}°F</p>
                <p>Feels Like</p>
              </div>
              <div className='flex flex-col items-center'>
                <p className='text-xl font-bold'>{weather.main.pressure} hPa</p>
                <p>Pressure</p>
              </div>
              <div className='flex flex-col items-center'>
                <p className='text-xl font-bold'>{weather.id} </p>
                <p>Time Zone</p>
              </div>
              <div className='flex flex-col items-center'>
                <p className='text-xl font-bold'>{weather.sys.country} </p>
                <p>Country</p>
              </div>
            </div>
          </div>
        )}

      
      </div>
    );
  }
}
